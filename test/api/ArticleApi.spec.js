/**
 * podravka.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Podravkaio);
  }
}(this, function(expect, Podravkaio) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Podravkaio.ArticleApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ArticleApi', function() {
    describe('apiArticlesImagesGetSubresource', function() {
      it('should call apiArticlesImagesGetSubresource successfully', function(done) {
        //uncomment below and update the code to test apiArticlesImagesGetSubresource
        //instance.apiArticlesImagesGetSubresource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiGetStateArticleItem', function() {
      it('should call apiGetStateArticleItem successfully', function(done) {
        //uncomment below and update the code to test apiGetStateArticleItem
        //instance.apiGetStateArticleItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiSetStateArticleItem', function() {
      it('should call apiSetStateArticleItem successfully', function(done) {
        //uncomment below and update the code to test apiSetStateArticleItem
        //instance.apiSetStateArticleItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteArticleItem', function() {
      it('should call deleteArticleItem successfully', function(done) {
        //uncomment below and update the code to test deleteArticleItem
        //instance.deleteArticleItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getArticleCollection', function() {
      it('should call getArticleCollection successfully', function(done) {
        //uncomment below and update the code to test getArticleCollection
        //instance.getArticleCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getArticleItem', function() {
      it('should call getArticleItem successfully', function(done) {
        //uncomment below and update the code to test getArticleItem
        //instance.getArticleItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postArticleCollection', function() {
      it('should call postArticleCollection successfully', function(done) {
        //uncomment below and update the code to test postArticleCollection
        //instance.postArticleCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putArticleItem', function() {
      it('should call putArticleItem successfully', function(done) {
        //uncomment below and update the code to test putArticleItem
        //instance.putArticleItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
