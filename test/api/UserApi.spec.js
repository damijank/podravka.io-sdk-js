/**
 * podravka.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Podravkaio);
  }
}(this, function(expect, Podravkaio) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Podravkaio.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('deleteUserGroupItem', function() {
      it('should call deleteUserGroupItem successfully', function(done) {
        //uncomment below and update the code to test deleteUserGroupItem
        //instance.deleteUserGroupItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUser', function() {
      it('should call getUser successfully', function(done) {
        //uncomment below and update the code to test getUser
        //instance.getUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserCollection', function() {
      it('should call getUserCollection successfully', function(done) {
        //uncomment below and update the code to test getUserCollection
        //instance.getUserCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserGroupCollection', function() {
      it('should call getUserGroupCollection successfully', function(done) {
        //uncomment below and update the code to test getUserGroupCollection
        //instance.getUserGroupCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserGroupItem', function() {
      it('should call getUserGroupItem successfully', function(done) {
        //uncomment below and update the code to test getUserGroupItem
        //instance.getUserGroupItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserListMetrics', function() {
      it('should call getUserListMetrics successfully', function(done) {
        //uncomment below and update the code to test getUserListMetrics
        //instance.getUserListMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserMetrics', function() {
      it('should call getUserMetrics successfully', function(done) {
        //uncomment below and update the code to test getUserMetrics
        //instance.getUserMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('membersAddUserGroupItem', function() {
      it('should call membersAddUserGroupItem successfully', function(done) {
        //uncomment below and update the code to test membersAddUserGroupItem
        //instance.membersAddUserGroupItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('membersRemoveUserGroupItem', function() {
      it('should call membersRemoveUserGroupItem successfully', function(done) {
        //uncomment below and update the code to test membersRemoveUserGroupItem
        //instance.membersRemoveUserGroupItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postUserGroupCollection', function() {
      it('should call postUserGroupCollection successfully', function(done) {
        //uncomment below and update the code to test postUserGroupCollection
        //instance.postUserGroupCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putUser', function() {
      it('should call putUser successfully', function(done) {
        //uncomment below and update the code to test putUser
        //instance.putUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putUserGroupItem', function() {
      it('should call putUserGroupItem successfully', function(done) {
        //uncomment below and update the code to test putUserGroupItem
        //instance.putUserGroupItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
