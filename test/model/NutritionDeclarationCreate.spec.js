/**
 * podravka.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Podravkaio);
  }
}(this, function(expect, Podravkaio) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Podravkaio.NutritionDeclarationCreate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NutritionDeclarationCreate', function() {
    it('should create an instance of NutritionDeclarationCreate', function() {
      // uncomment below and update the code to test NutritionDeclarationCreate
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be.a(Podravkaio.NutritionDeclarationCreate);
    });

    it('should have the property baseAmount (base name: "base_amount")', function() {
      // uncomment below and update the code to test the property baseAmount
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property baseUnit (base name: "base_unit")', function() {
      // uncomment below and update the code to test the property baseUnit
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property energyKcal (base name: "energy_kcal")', function() {
      // uncomment below and update the code to test the property energyKcal
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property energyKilojoules (base name: "energy_kilojoules")', function() {
      // uncomment below and update the code to test the property energyKilojoules
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property fats (base name: "fats")', function() {
      // uncomment below and update the code to test the property fats
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property saturatedFattyAcids (base name: "saturated_fatty_acids")', function() {
      // uncomment below and update the code to test the property saturatedFattyAcids
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property monounsaturatedFattyAcids (base name: "monounsaturated_fatty_acids")', function() {
      // uncomment below and update the code to test the property monounsaturatedFattyAcids
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property polyunsaturatedFattyAcids (base name: "polyunsaturated_fatty_acids")', function() {
      // uncomment below and update the code to test the property polyunsaturatedFattyAcids
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property carbohydrates (base name: "carbohydrates")', function() {
      // uncomment below and update the code to test the property carbohydrates
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property sugars (base name: "sugars")', function() {
      // uncomment below and update the code to test the property sugars
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property polyols (base name: "polyols")', function() {
      // uncomment below and update the code to test the property polyols
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property starch (base name: "starch")', function() {
      // uncomment below and update the code to test the property starch
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property fibers (base name: "fibers")', function() {
      // uncomment below and update the code to test the property fibers
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property protein (base name: "protein")', function() {
      // uncomment below and update the code to test the property protein
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property salt (base name: "salt")', function() {
      // uncomment below and update the code to test the property salt
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminA (base name: "vitamin_a")', function() {
      // uncomment below and update the code to test the property vitaminA
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminD (base name: "vitamin_d")', function() {
      // uncomment below and update the code to test the property vitaminD
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminE (base name: "vitamin_e")', function() {
      // uncomment below and update the code to test the property vitaminE
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminK (base name: "vitamin_k")', function() {
      // uncomment below and update the code to test the property vitaminK
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminC (base name: "vitamin_c")', function() {
      // uncomment below and update the code to test the property vitaminC
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminB6 (base name: "vitamin_b6")', function() {
      // uncomment below and update the code to test the property vitaminB6
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property vitaminB12 (base name: "vitamin_b12")', function() {
      // uncomment below and update the code to test the property vitaminB12
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property thiamine (base name: "thiamine")', function() {
      // uncomment below and update the code to test the property thiamine
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property riboflavin (base name: "riboflavin")', function() {
      // uncomment below and update the code to test the property riboflavin
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property niacin (base name: "niacin")', function() {
      // uncomment below and update the code to test the property niacin
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property folicAcid (base name: "folic_acid")', function() {
      // uncomment below and update the code to test the property folicAcid
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property biotin (base name: "biotin")', function() {
      // uncomment below and update the code to test the property biotin
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property pantothenicAcid (base name: "pantothenic_acid")', function() {
      // uncomment below and update the code to test the property pantothenicAcid
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property potassium (base name: "potassium")', function() {
      // uncomment below and update the code to test the property potassium
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property chlorine (base name: "chlorine")', function() {
      // uncomment below and update the code to test the property chlorine
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property calcium (base name: "calcium")', function() {
      // uncomment below and update the code to test the property calcium
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property phosphorus (base name: "phosphorus")', function() {
      // uncomment below and update the code to test the property phosphorus
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property magnesium (base name: "magnesium")', function() {
      // uncomment below and update the code to test the property magnesium
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property iron (base name: "iron")', function() {
      // uncomment below and update the code to test the property iron
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property zinc (base name: "zinc")', function() {
      // uncomment below and update the code to test the property zinc
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property copper (base name: "copper")', function() {
      // uncomment below and update the code to test the property copper
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property manganese (base name: "manganese")', function() {
      // uncomment below and update the code to test the property manganese
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property fluoride (base name: "fluoride")', function() {
      // uncomment below and update the code to test the property fluoride
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property selenium (base name: "selenium")', function() {
      // uncomment below and update the code to test the property selenium
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property chromium (base name: "chromium")', function() {
      // uncomment below and update the code to test the property chromium
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property molybdenum (base name: "molybdenum")', function() {
      // uncomment below and update the code to test the property molybdenum
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

    it('should have the property iodine (base name: "iodine")', function() {
      // uncomment below and update the code to test the property iodine
      //var instance = new Podravkaio.NutritionDeclarationCreate();
      //expect(instance).to.be();
    });

  });

}));
