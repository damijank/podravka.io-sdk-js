0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@4.1.2
3 info using node@v7.6.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/damijan/burza/npm/js',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/damijan/.npm/podravkaio/0.0.2-a/package.tgz not in flight; packing
9 verbose correctMkdir /home/damijan/.npm correctMkdir not in flight; initializing
10 info lifecycle podravkaio@0.0.2-a~prepublish: podravkaio@0.0.2-a
11 silly lifecycle podravkaio@0.0.2-a~prepublish: no script for prepublish, continuing
12 info lifecycle podravkaio@0.0.2-a~prepare: podravkaio@0.0.2-a
13 silly lifecycle podravkaio@0.0.2-a~prepare: no script for prepare, continuing
14 verbose tar pack [ '/home/damijan/.npm/podravkaio/0.0.2-a/package.tgz',
14 verbose tar pack   '/home/damijan/burza/npm/js' ]
15 verbose tarball /home/damijan/.npm/podravkaio/0.0.2-a/package.tgz
16 verbose folder /home/damijan/burza/npm/js
17 verbose addLocalTarball adding from inside cache /home/damijan/.npm/podravkaio/0.0.2-a/package.tgz
18 verbose correctMkdir /home/damijan/.npm correctMkdir not in flight; initializing
19 silly cache afterAdd podravkaio@0.0.2-a
20 verbose afterAdd /home/damijan/.npm/podravkaio/0.0.2-a/package/package.json not in flight; writing
21 verbose correctMkdir /home/damijan/.npm correctMkdir not in flight; initializing
22 verbose afterAdd /home/damijan/.npm/podravkaio/0.0.2-a/package/package.json written
23 silly publish { name: 'podravkaio',
23 silly publish   version: '0.0.2-a',
23 silly publish   description: 'JS SDK for podravka-io platform',
23 silly publish   license: 'Unlicense',
23 silly publish   main: 'src/index.js',
23 silly publish   scripts: { test: './node_modules/mocha/bin/mocha --recursive' },
23 silly publish   browser: { fs: false },
23 silly publish   dependencies: { superagent: '3.5.2' },
23 silly publish   devDependencies: { mocha: '~2.3.4', sinon: '1.17.3', 'expect.js': '~0.3.1' },
23 silly publish   readme: '# podravkaio\n\nPodravkaio - JavaScript client for podravkaio\nNo description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\nThis SDK is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:\n\n- API version: 0.0.2.1\n- Package version: 0.0.2.1\n- Build package: io.swagger.codegen.languages.JavascriptClientCodegen\n\n## Installation\n\n### For [Node.js](https://nodejs.org/)\n\n#### npm\n\nTo publish the library as a [npm](https://www.npmjs.com/),\nplease follow the procedure in ["Publishing npm packages"](https://docs.npmjs.com/getting-started/publishing-npm-packages).\n\nThen install it via:\n\n```shell\nnpm install podravkaio --save\n```\n\n##### Local development\n\nTo use the library locally without publishing to a remote npm registry, first install the dependencies by changing \ninto the directory containing `package.json` (and this README). Let\'s call this `JAVASCRIPT_CLIENT_DIR`. Then run:\n\n```shell\nnpm install\n```\n\nNext, [link](https://docs.npmjs.com/cli/link) it globally in npm with the following, also from `JAVASCRIPT_CLIENT_DIR`:\n\n```shell\nnpm link\n```\n\nFinally, switch to the directory you want to use your podravkaio from, and run:\n\n```shell\nnpm link /path/to/<JAVASCRIPT_CLIENT_DIR>\n```\n\nYou should now be able to `require(\'podravkaio\')` in javascript files from the directory you ran the last \ncommand above from.\n\n#### git\n#\nIf the library is hosted at a git repository, e.g.\nhttps://github.com/GIT_USER_ID/GIT_REPO_ID\nthen install it via:\n\n```shell\n    npm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n### For browser\n\nThe library also works in the browser environment via npm and [browserify](http://browserify.org/). After following\nthe above steps with Node.js and installing browserify with `npm install -g browserify`,\nperform the following (assuming *main.js* is your entry file, that\'s to say your javascript file where you actually \nuse this library):\n\n```shell\nbrowserify main.js > bundle.js\n```\n\nThen include *bundle.js* in the HTML pages.\n\n### Webpack Configuration\n\nUsing Webpack you may encounter the following error: "Module not found: Error:\nCannot resolve module", most certainly you should disable AMD loader. Add/merge\nthe following section to your webpack config:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n## Getting Started\n\nPlease follow the [installation](#installation) instruction and execute the following JS code:\n\n```javascript\nvar Podravkaio = require(\'podravkaio\');\n\nvar defaultClient = Podravkaio.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: oauth\nvar oauth = defaultClient.authentications[\'oauth\'];\noauth.accessToken = "YOUR ACCESS TOKEN"\n\nvar api = new Podravkaio.ArticleApi()\n\nvar id = "id_example"; // {String} \n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log(\'API called successfully. Returned data: \' + data);\n  }\n};\napi.apiArticlesImagesGetSubresource(id, callback);\n\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *http://127.0.0.1:8000*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*Podravkaio.ArticleApi* | [**apiArticlesImagesGetSubresource**](docs/ArticleApi.md#apiArticlesImagesGetSubresource) | **GET** /api/articles/{id}/images | Retrieves the collection of Image resources.\n*Podravkaio.ArticleApi* | [**apiGetStateArticleItem**](docs/ArticleApi.md#apiGetStateArticleItem) | **GET** /api/articles/{id}/state | Retrieves a Article resource.\n*Podravkaio.ArticleApi* | [**apiSetStateArticleItem**](docs/ArticleApi.md#apiSetStateArticleItem) | **PUT** /api/articles/{id}/state/{state} | Replaces the Article resource.\n*Podravkaio.ArticleApi* | [**deleteArticleItem**](docs/ArticleApi.md#deleteArticleItem) | **DELETE** /api/articles/{id} | Removes the Article resource.\n*Podravkaio.ArticleApi* | [**getArticleCollection**](docs/ArticleApi.md#getArticleCollection) | **GET** /api/articles | Retrieves the collection of Article resources.\n*Podravkaio.ArticleApi* | [**getArticleItem**](docs/ArticleApi.md#getArticleItem) | **GET** /api/articles/{id} | Retrieves a Article resource.\n*Podravkaio.ArticleApi* | [**postArticleCollection**](docs/ArticleApi.md#postArticleCollection) | **POST** /api/articles | Creates a Article resource.\n*Podravkaio.ArticleApi* | [**putArticleItem**](docs/ArticleApi.md#putArticleItem) | **PUT** /api/articles/{id} | Replaces the Article resource.\n*Podravkaio.ArticleOriginApi* | [**apiArticleOriginsGetEmbeddedArticleOriginItem**](docs/ArticleOriginApi.md#apiArticleOriginsGetEmbeddedArticleOriginItem) | **GET** /api/article_origins/{id} | Retrieves a ArticleOrigin resource.\n*Podravkaio.ArticleOriginApi* | [**apiArticlesOriginGetSubresourceArticleOriginCollection**](docs/ArticleOriginApi.md#apiArticlesOriginGetSubresourceArticleOriginCollection) | **GET** /api/article_origins | Retrieves the collection of ArticleOrigin resources.\n*Podravkaio.ImageApi* | [**apiArticlesImagesGetSubresource**](docs/ImageApi.md#apiArticlesImagesGetSubresource) | **GET** /api/articles/{id}/images | Retrieves the collection of Image resources.\n*Podravkaio.ImageApi* | [**apiGetStateImageItem**](docs/ImageApi.md#apiGetStateImageItem) | **GET** /api/images/{id}/state | Retrieves a Image resource.\n*Podravkaio.ImageApi* | [**apiSetStateImageItem**](docs/ImageApi.md#apiSetStateImageItem) | **PUT** /api/images/{id}/state/{state} | Replaces the Image resource.\n*Podravkaio.ImageApi* | [**deleteImageItem**](docs/ImageApi.md#deleteImageItem) | **DELETE** /api/images/{id} | Removes the Image resource.\n*Podravkaio.ImageApi* | [**getImageCollection**](docs/ImageApi.md#getImageCollection) | **GET** /api/images | Retrieves the collection of Image resources.\n*Podravkaio.ImageApi* | [**getImageItem**](docs/ImageApi.md#getImageItem) | **GET** /api/images/{id} | Retrieves a Image resource.\n*Podravkaio.ImageApi* | [**postImageCollection**](docs/ImageApi.md#postImageCollection) | **POST** /api/images | Creates a Image resource.\n*Podravkaio.ImageApi* | [**putImageItem**](docs/ImageApi.md#putImageItem) | **PUT** /api/images/{id} | Replaces the Image resource.\n\n\n## Documentation for Models\n\n - [Podravkaio.ArticleApiState](docs/ArticleApiState.md)\n - [Podravkaio.ArticleArticleCreate](docs/ArticleArticleCreate.md)\n - [Podravkaio.ArticleArticleCreateReadCreateReadArticleReadRead](docs/ArticleArticleCreateReadCreateReadArticleReadRead.md)\n - [Podravkaio.ArticleArticleListList](docs/ArticleArticleListList.md)\n - [Podravkaio.ArticleArticleReadRead](docs/ArticleArticleReadRead.md)\n - [Podravkaio.ArticleArticleUpdate](docs/ArticleArticleUpdate.md)\n - [Podravkaio.ArticleArticleUpdateReadUpdateReadArticleReadRead](docs/ArticleArticleUpdateReadUpdateReadArticleReadRead.md)\n - [Podravkaio.ArticleOriginArticleReadRead](docs/ArticleOriginArticleReadRead.md)\n - [Podravkaio.ImageApiState](docs/ImageApiState.md)\n - [Podravkaio.ImageImageCreate](docs/ImageImageCreate.md)\n - [Podravkaio.ImageImageCreateReadCreateReadRead](docs/ImageImageCreateReadCreateReadRead.md)\n - [Podravkaio.ImageImageListList](docs/ImageImageListList.md)\n - [Podravkaio.ImageImageReadRead](docs/ImageImageReadRead.md)\n - [Podravkaio.ImageImageUpdate](docs/ImageImageUpdate.md)\n - [Podravkaio.ImageImageUpdateReadUpdateReadRead](docs/ImageImageUpdateReadUpdateReadRead.md)\n - [Podravkaio.ImageInstanceImageRead](docs/ImageInstanceImageRead.md)\n - [Podravkaio.ImageOriginImageCreate](docs/ImageOriginImageCreate.md)\n - [Podravkaio.ImageRead](docs/ImageRead.md)\n - [Podravkaio.ImageVariationImageRead](docs/ImageVariationImageRead.md)\n - [Podravkaio.ImageVariationUrlVarsImageRead](docs/ImageVariationUrlVarsImageRead.md)\n - [Podravkaio.UserRead](docs/UserRead.md)\n\n\n## Documentation for Authorization\n\n\n### oauth\n\n- **Type**: OAuth\n- **Flow**: accessCode\n- **Authorization URL**: oauth/v2/auth\n- **Scopes**: N/A\n\n',
23 silly publish   readmeFilename: 'README.md',
23 silly publish   gitHead: '3b0351a4ca9f48a3c443813d8015d298786e9603',
23 silly publish   _id: 'podravkaio@0.0.2-a',
23 silly publish   _shasum: 'c55cd5366afc8e751e93014587a2f35c7f446d43',
23 silly publish   _from: '.' }
24 info lifecycle podravkaio@0.0.2-a~prepublishOnly: podravkaio@0.0.2-a
25 silly lifecycle podravkaio@0.0.2-a~prepublishOnly: no script for prepublishOnly, continuing
26 verbose getPublishConfig undefined
27 silly mapToRegistry name podravkaio
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'podravkaio',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'podravkaio',
30 silly mapToRegistry   name: 'podravkaio',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/podravkaio
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /home/damijan/.npm/podravkaio/0.0.2-a/package.tgz
34 verbose request uri https://registry.npmjs.org/podravkaio
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 5:07:47 PM
37 verbose request using bearer token for auth
38 verbose request id 21a6e6b81fbeeb3b
39 http request PUT https://registry.npmjs.org/podravkaio
40 http 403 https://registry.npmjs.org/podravkaio
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '93',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Wed, 08 Nov 2017 16:07:48 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-hhn1547-HHN',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1510157267.149496,VS0,VE1124',
41 verbose headers   vary: 'Accept-Encoding, Accept' }
42 verbose request invalidating /home/damijan/.npm/registry.npmjs.org/podravkaio on PUT
43 error publish Failed PUT 403
44 verbose stack Error: You cannot publish over the previously published version 0.0.2-a. : podravkaio
44 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:304:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:292:14)
44 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:212:14)
44 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:186:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:192:7)
44 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1081:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:189:7)
44 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1001:12)
45 verbose statusCode 403
46 verbose pkgid podravkaio
47 verbose cwd /home/damijan/burza/npm/js
48 error Linux 4.4.0-98-generic
49 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
50 error node v7.6.0
51 error npm  v4.1.2
52 error code E403
53 error You cannot publish over the previously published version 0.0.2-a. : podravkaio
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
