/**
 * podravka.io
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ArticleApiState', 'model/ArticleArticleCreate', 'model/ArticleArticleCreateReadCreateReadArticleReadRead', 'model/ArticleArticleListList', 'model/ArticleArticleReadRead', 'model/ArticleArticleUpdate', 'model/ArticleArticleUpdateReadUpdateReadArticleReadRead', 'model/ArticleOriginArticleReadRead', 'model/ImageApiState', 'model/ImageImageCreate', 'model/ImageImageCreateReadCreateReadRead', 'model/ImageImageListList', 'model/ImageImageReadRead', 'model/ImageImageUpdate', 'model/ImageImageUpdateReadUpdateReadRead', 'model/ImageInstanceImageRead', 'model/ImageOriginImageCreate', 'model/ImageRead', 'model/ImageVariationImageRead', 'model/ImageVariationUrlVarsImageRead', 'model/UserRead', 'api/ArticleApi', 'api/ArticleOriginApi', 'api/ImageApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ArticleApiState'), require('./model/ArticleArticleCreate'), require('./model/ArticleArticleCreateReadCreateReadArticleReadRead'), require('./model/ArticleArticleListList'), require('./model/ArticleArticleReadRead'), require('./model/ArticleArticleUpdate'), require('./model/ArticleArticleUpdateReadUpdateReadArticleReadRead'), require('./model/ArticleOriginArticleReadRead'), require('./model/ImageApiState'), require('./model/ImageImageCreate'), require('./model/ImageImageCreateReadCreateReadRead'), require('./model/ImageImageListList'), require('./model/ImageImageReadRead'), require('./model/ImageImageUpdate'), require('./model/ImageImageUpdateReadUpdateReadRead'), require('./model/ImageInstanceImageRead'), require('./model/ImageOriginImageCreate'), require('./model/ImageRead'), require('./model/ImageVariationImageRead'), require('./model/ImageVariationUrlVarsImageRead'), require('./model/UserRead'), require('./api/ArticleApi'), require('./api/ArticleOriginApi'), require('./api/ImageApi'));
  }
}(function(ApiClient, ArticleApiState, ArticleArticleCreate, ArticleArticleCreateReadCreateReadArticleReadRead, ArticleArticleListList, ArticleArticleReadRead, ArticleArticleUpdate, ArticleArticleUpdateReadUpdateReadArticleReadRead, ArticleOriginArticleReadRead, ImageApiState, ImageImageCreate, ImageImageCreateReadCreateReadRead, ImageImageListList, ImageImageReadRead, ImageImageUpdate, ImageImageUpdateReadUpdateReadRead, ImageInstanceImageRead, ImageOriginImageCreate, ImageRead, ImageVariationImageRead, ImageVariationUrlVarsImageRead, UserRead, ArticleApi, ArticleOriginApi, ImageApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Podravkaio = require('index'); // See note below*.
   * var xxxSvc = new Podravkaio.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Podravkaio.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Podravkaio.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Podravkaio.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.2.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ArticleApiState model constructor.
     * @property {module:model/ArticleApiState}
     */
    ArticleApiState: ArticleApiState,
    /**
     * The ArticleArticleCreate model constructor.
     * @property {module:model/ArticleArticleCreate}
     */
    ArticleArticleCreate: ArticleArticleCreate,
    /**
     * The ArticleArticleCreateReadCreateReadArticleReadRead model constructor.
     * @property {module:model/ArticleArticleCreateReadCreateReadArticleReadRead}
     */
    ArticleArticleCreateReadCreateReadArticleReadRead: ArticleArticleCreateReadCreateReadArticleReadRead,
    /**
     * The ArticleArticleListList model constructor.
     * @property {module:model/ArticleArticleListList}
     */
    ArticleArticleListList: ArticleArticleListList,
    /**
     * The ArticleArticleReadRead model constructor.
     * @property {module:model/ArticleArticleReadRead}
     */
    ArticleArticleReadRead: ArticleArticleReadRead,
    /**
     * The ArticleArticleUpdate model constructor.
     * @property {module:model/ArticleArticleUpdate}
     */
    ArticleArticleUpdate: ArticleArticleUpdate,
    /**
     * The ArticleArticleUpdateReadUpdateReadArticleReadRead model constructor.
     * @property {module:model/ArticleArticleUpdateReadUpdateReadArticleReadRead}
     */
    ArticleArticleUpdateReadUpdateReadArticleReadRead: ArticleArticleUpdateReadUpdateReadArticleReadRead,
    /**
     * The ArticleOriginArticleReadRead model constructor.
     * @property {module:model/ArticleOriginArticleReadRead}
     */
    ArticleOriginArticleReadRead: ArticleOriginArticleReadRead,
    /**
     * The ImageApiState model constructor.
     * @property {module:model/ImageApiState}
     */
    ImageApiState: ImageApiState,
    /**
     * The ImageImageCreate model constructor.
     * @property {module:model/ImageImageCreate}
     */
    ImageImageCreate: ImageImageCreate,
    /**
     * The ImageImageCreateReadCreateReadRead model constructor.
     * @property {module:model/ImageImageCreateReadCreateReadRead}
     */
    ImageImageCreateReadCreateReadRead: ImageImageCreateReadCreateReadRead,
    /**
     * The ImageImageListList model constructor.
     * @property {module:model/ImageImageListList}
     */
    ImageImageListList: ImageImageListList,
    /**
     * The ImageImageReadRead model constructor.
     * @property {module:model/ImageImageReadRead}
     */
    ImageImageReadRead: ImageImageReadRead,
    /**
     * The ImageImageUpdate model constructor.
     * @property {module:model/ImageImageUpdate}
     */
    ImageImageUpdate: ImageImageUpdate,
    /**
     * The ImageImageUpdateReadUpdateReadRead model constructor.
     * @property {module:model/ImageImageUpdateReadUpdateReadRead}
     */
    ImageImageUpdateReadUpdateReadRead: ImageImageUpdateReadUpdateReadRead,
    /**
     * The ImageInstanceImageRead model constructor.
     * @property {module:model/ImageInstanceImageRead}
     */
    ImageInstanceImageRead: ImageInstanceImageRead,
    /**
     * The ImageOriginImageCreate model constructor.
     * @property {module:model/ImageOriginImageCreate}
     */
    ImageOriginImageCreate: ImageOriginImageCreate,
    /**
     * The ImageRead model constructor.
     * @property {module:model/ImageRead}
     */
    ImageRead: ImageRead,
    /**
     * The ImageVariationImageRead model constructor.
     * @property {module:model/ImageVariationImageRead}
     */
    ImageVariationImageRead: ImageVariationImageRead,
    /**
     * The ImageVariationUrlVarsImageRead model constructor.
     * @property {module:model/ImageVariationUrlVarsImageRead}
     */
    ImageVariationUrlVarsImageRead: ImageVariationUrlVarsImageRead,
    /**
     * The UserRead model constructor.
     * @property {module:model/UserRead}
     */
    UserRead: UserRead,
    /**
     * The ArticleApi service constructor.
     * @property {module:api/ArticleApi}
     */
    ArticleApi: ArticleApi,
    /**
     * The ArticleOriginApi service constructor.
     * @property {module:api/ArticleOriginApi}
     */
    ArticleOriginApi: ArticleOriginApi,
    /**
     * The ImageApi service constructor.
     * @property {module:api/ImageApi}
     */
    ImageApi: ImageApi
  };

  return exports;
}));
