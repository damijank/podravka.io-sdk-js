/**
 * podravka.io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ArticleCreate', 'model/ArticleList', 'model/ArticleOriginCreate', 'model/ArticleRead', 'model/ArticleState', 'model/ArticleUpdate', 'model/BrandCreate', 'model/BrandList', 'model/BrandRead', 'model/BrandState', 'model/BrandUpdate', 'model/ContentTaxonCreate', 'model/ContentTaxonList', 'model/ContentTaxonRead', 'model/ContentTaxonUpdate', 'model/FileCreate', 'model/FileCreateRead', 'model/FileList', 'model/FileOriginCreate', 'model/FileRead', 'model/FileState', 'model/FileUpdate', 'model/FileUpdateRead', 'model/ImageCreate', 'model/ImageCreateRead', 'model/ImageEmbed', 'model/ImageInstanceEmbed', 'model/ImageList', 'model/ImageOriginCreate', 'model/ImageRead', 'model/ImageState', 'model/ImageUpdate', 'model/ImageUpdateRead', 'model/ImageVariationEmbed', 'model/ImageVariationUrlVarsEmbed', 'model/IngredientCreate', 'model/IngredientList', 'model/IngredientOriginCreate', 'model/IngredientRead', 'model/IngredientState', 'model/IngredientUpdate', 'model/NutritionDeclarationCreate', 'model/NutritionDeclarationEmbed', 'model/NutritionDeclarationEmbedBase', 'model/NutritionDeclarationEmbedNutrients', 'model/ProductCreate', 'model/ProductList', 'model/ProductOriginCreate', 'model/ProductRead', 'model/ProductState', 'model/ProductUpdate', 'model/RecipeCreate', 'model/RecipeIngredientCreate', 'model/RecipeIngredientEmbed', 'model/RecipeList', 'model/RecipeOriginCreate', 'model/RecipePreparationStepCreate', 'model/RecipePreparationStepEmbed', 'model/RecipeRead', 'model/RecipeState', 'model/RecipeUpdate', 'model/TaxonBagCreate', 'model/TaxonBagList', 'model/TaxonBagRead', 'model/TaxonBagUpdate', 'model/TaxonCreate', 'model/TaxonList', 'model/TaxonRead', 'model/TaxonUpdate', 'model/TaxonomyCreate', 'model/TaxonomyList', 'model/TaxonomyRead', 'model/TaxonomyUpdate', 'model/UserEmbed', 'model/VideoCreate', 'model/VideoCreateRead', 'model/VideoEmbed', 'model/VideoList', 'model/VideoOriginCreate', 'model/VideoRead', 'model/VideoState', 'model/VideoUpdate', 'model/VideoUpdateRead', 'api/ArticleApi', 'api/BrandApi', 'api/FileApi', 'api/ImageApi', 'api/IngredientApi', 'api/ProductApi', 'api/RecipeApi', 'api/TaxonomyApi', 'api/VideoApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ArticleCreate'), require('./model/ArticleList'), require('./model/ArticleOriginCreate'), require('./model/ArticleRead'), require('./model/ArticleState'), require('./model/ArticleUpdate'), require('./model/BrandCreate'), require('./model/BrandList'), require('./model/BrandRead'), require('./model/BrandState'), require('./model/BrandUpdate'), require('./model/ContentTaxonCreate'), require('./model/ContentTaxonList'), require('./model/ContentTaxonRead'), require('./model/ContentTaxonUpdate'), require('./model/FileCreate'), require('./model/FileCreateRead'), require('./model/FileList'), require('./model/FileOriginCreate'), require('./model/FileRead'), require('./model/FileState'), require('./model/FileUpdate'), require('./model/FileUpdateRead'), require('./model/ImageCreate'), require('./model/ImageCreateRead'), require('./model/ImageEmbed'), require('./model/ImageInstanceEmbed'), require('./model/ImageList'), require('./model/ImageOriginCreate'), require('./model/ImageRead'), require('./model/ImageState'), require('./model/ImageUpdate'), require('./model/ImageUpdateRead'), require('./model/ImageVariationEmbed'), require('./model/ImageVariationUrlVarsEmbed'), require('./model/IngredientCreate'), require('./model/IngredientList'), require('./model/IngredientOriginCreate'), require('./model/IngredientRead'), require('./model/IngredientState'), require('./model/IngredientUpdate'), require('./model/NutritionDeclarationCreate'), require('./model/NutritionDeclarationEmbed'), require('./model/NutritionDeclarationEmbedBase'), require('./model/NutritionDeclarationEmbedNutrients'), require('./model/ProductCreate'), require('./model/ProductList'), require('./model/ProductOriginCreate'), require('./model/ProductRead'), require('./model/ProductState'), require('./model/ProductUpdate'), require('./model/RecipeCreate'), require('./model/RecipeIngredientCreate'), require('./model/RecipeIngredientEmbed'), require('./model/RecipeList'), require('./model/RecipeOriginCreate'), require('./model/RecipePreparationStepCreate'), require('./model/RecipePreparationStepEmbed'), require('./model/RecipeRead'), require('./model/RecipeState'), require('./model/RecipeUpdate'), require('./model/TaxonBagCreate'), require('./model/TaxonBagList'), require('./model/TaxonBagRead'), require('./model/TaxonBagUpdate'), require('./model/TaxonCreate'), require('./model/TaxonList'), require('./model/TaxonRead'), require('./model/TaxonUpdate'), require('./model/TaxonomyCreate'), require('./model/TaxonomyList'), require('./model/TaxonomyRead'), require('./model/TaxonomyUpdate'), require('./model/UserEmbed'), require('./model/VideoCreate'), require('./model/VideoCreateRead'), require('./model/VideoEmbed'), require('./model/VideoList'), require('./model/VideoOriginCreate'), require('./model/VideoRead'), require('./model/VideoState'), require('./model/VideoUpdate'), require('./model/VideoUpdateRead'), require('./api/ArticleApi'), require('./api/BrandApi'), require('./api/FileApi'), require('./api/ImageApi'), require('./api/IngredientApi'), require('./api/ProductApi'), require('./api/RecipeApi'), require('./api/TaxonomyApi'), require('./api/VideoApi'));
  }
}(function(ApiClient, ArticleCreate, ArticleList, ArticleOriginCreate, ArticleRead, ArticleState, ArticleUpdate, BrandCreate, BrandList, BrandRead, BrandState, BrandUpdate, ContentTaxonCreate, ContentTaxonList, ContentTaxonRead, ContentTaxonUpdate, FileCreate, FileCreateRead, FileList, FileOriginCreate, FileRead, FileState, FileUpdate, FileUpdateRead, ImageCreate, ImageCreateRead, ImageEmbed, ImageInstanceEmbed, ImageList, ImageOriginCreate, ImageRead, ImageState, ImageUpdate, ImageUpdateRead, ImageVariationEmbed, ImageVariationUrlVarsEmbed, IngredientCreate, IngredientList, IngredientOriginCreate, IngredientRead, IngredientState, IngredientUpdate, NutritionDeclarationCreate, NutritionDeclarationEmbed, NutritionDeclarationEmbedBase, NutritionDeclarationEmbedNutrients, ProductCreate, ProductList, ProductOriginCreate, ProductRead, ProductState, ProductUpdate, RecipeCreate, RecipeIngredientCreate, RecipeIngredientEmbed, RecipeList, RecipeOriginCreate, RecipePreparationStepCreate, RecipePreparationStepEmbed, RecipeRead, RecipeState, RecipeUpdate, TaxonBagCreate, TaxonBagList, TaxonBagRead, TaxonBagUpdate, TaxonCreate, TaxonList, TaxonRead, TaxonUpdate, TaxonomyCreate, TaxonomyList, TaxonomyRead, TaxonomyUpdate, UserEmbed, VideoCreate, VideoCreateRead, VideoEmbed, VideoList, VideoOriginCreate, VideoRead, VideoState, VideoUpdate, VideoUpdateRead, ArticleApi, BrandApi, FileApi, ImageApi, IngredientApi, ProductApi, RecipeApi, TaxonomyApi, VideoApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Podravkaio = require('index'); // See note below*.
   * var xxxSvc = new Podravkaio.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Podravkaio.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Podravkaio.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Podravkaio.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ArticleCreate model constructor.
     * @property {module:model/ArticleCreate}
     */
    ArticleCreate: ArticleCreate,
    /**
     * The ArticleList model constructor.
     * @property {module:model/ArticleList}
     */
    ArticleList: ArticleList,
    /**
     * The ArticleOriginCreate model constructor.
     * @property {module:model/ArticleOriginCreate}
     */
    ArticleOriginCreate: ArticleOriginCreate,
    /**
     * The ArticleRead model constructor.
     * @property {module:model/ArticleRead}
     */
    ArticleRead: ArticleRead,
    /**
     * The ArticleState model constructor.
     * @property {module:model/ArticleState}
     */
    ArticleState: ArticleState,
    /**
     * The ArticleUpdate model constructor.
     * @property {module:model/ArticleUpdate}
     */
    ArticleUpdate: ArticleUpdate,
    /**
     * The BrandCreate model constructor.
     * @property {module:model/BrandCreate}
     */
    BrandCreate: BrandCreate,
    /**
     * The BrandList model constructor.
     * @property {module:model/BrandList}
     */
    BrandList: BrandList,
    /**
     * The BrandRead model constructor.
     * @property {module:model/BrandRead}
     */
    BrandRead: BrandRead,
    /**
     * The BrandState model constructor.
     * @property {module:model/BrandState}
     */
    BrandState: BrandState,
    /**
     * The BrandUpdate model constructor.
     * @property {module:model/BrandUpdate}
     */
    BrandUpdate: BrandUpdate,
    /**
     * The ContentTaxonCreate model constructor.
     * @property {module:model/ContentTaxonCreate}
     */
    ContentTaxonCreate: ContentTaxonCreate,
    /**
     * The ContentTaxonList model constructor.
     * @property {module:model/ContentTaxonList}
     */
    ContentTaxonList: ContentTaxonList,
    /**
     * The ContentTaxonRead model constructor.
     * @property {module:model/ContentTaxonRead}
     */
    ContentTaxonRead: ContentTaxonRead,
    /**
     * The ContentTaxonUpdate model constructor.
     * @property {module:model/ContentTaxonUpdate}
     */
    ContentTaxonUpdate: ContentTaxonUpdate,
    /**
     * The FileCreate model constructor.
     * @property {module:model/FileCreate}
     */
    FileCreate: FileCreate,
    /**
     * The FileCreateRead model constructor.
     * @property {module:model/FileCreateRead}
     */
    FileCreateRead: FileCreateRead,
    /**
     * The FileList model constructor.
     * @property {module:model/FileList}
     */
    FileList: FileList,
    /**
     * The FileOriginCreate model constructor.
     * @property {module:model/FileOriginCreate}
     */
    FileOriginCreate: FileOriginCreate,
    /**
     * The FileRead model constructor.
     * @property {module:model/FileRead}
     */
    FileRead: FileRead,
    /**
     * The FileState model constructor.
     * @property {module:model/FileState}
     */
    FileState: FileState,
    /**
     * The FileUpdate model constructor.
     * @property {module:model/FileUpdate}
     */
    FileUpdate: FileUpdate,
    /**
     * The FileUpdateRead model constructor.
     * @property {module:model/FileUpdateRead}
     */
    FileUpdateRead: FileUpdateRead,
    /**
     * The ImageCreate model constructor.
     * @property {module:model/ImageCreate}
     */
    ImageCreate: ImageCreate,
    /**
     * The ImageCreateRead model constructor.
     * @property {module:model/ImageCreateRead}
     */
    ImageCreateRead: ImageCreateRead,
    /**
     * The ImageEmbed model constructor.
     * @property {module:model/ImageEmbed}
     */
    ImageEmbed: ImageEmbed,
    /**
     * The ImageInstanceEmbed model constructor.
     * @property {module:model/ImageInstanceEmbed}
     */
    ImageInstanceEmbed: ImageInstanceEmbed,
    /**
     * The ImageList model constructor.
     * @property {module:model/ImageList}
     */
    ImageList: ImageList,
    /**
     * The ImageOriginCreate model constructor.
     * @property {module:model/ImageOriginCreate}
     */
    ImageOriginCreate: ImageOriginCreate,
    /**
     * The ImageRead model constructor.
     * @property {module:model/ImageRead}
     */
    ImageRead: ImageRead,
    /**
     * The ImageState model constructor.
     * @property {module:model/ImageState}
     */
    ImageState: ImageState,
    /**
     * The ImageUpdate model constructor.
     * @property {module:model/ImageUpdate}
     */
    ImageUpdate: ImageUpdate,
    /**
     * The ImageUpdateRead model constructor.
     * @property {module:model/ImageUpdateRead}
     */
    ImageUpdateRead: ImageUpdateRead,
    /**
     * The ImageVariationEmbed model constructor.
     * @property {module:model/ImageVariationEmbed}
     */
    ImageVariationEmbed: ImageVariationEmbed,
    /**
     * The ImageVariationUrlVarsEmbed model constructor.
     * @property {module:model/ImageVariationUrlVarsEmbed}
     */
    ImageVariationUrlVarsEmbed: ImageVariationUrlVarsEmbed,
    /**
     * The IngredientCreate model constructor.
     * @property {module:model/IngredientCreate}
     */
    IngredientCreate: IngredientCreate,
    /**
     * The IngredientList model constructor.
     * @property {module:model/IngredientList}
     */
    IngredientList: IngredientList,
    /**
     * The IngredientOriginCreate model constructor.
     * @property {module:model/IngredientOriginCreate}
     */
    IngredientOriginCreate: IngredientOriginCreate,
    /**
     * The IngredientRead model constructor.
     * @property {module:model/IngredientRead}
     */
    IngredientRead: IngredientRead,
    /**
     * The IngredientState model constructor.
     * @property {module:model/IngredientState}
     */
    IngredientState: IngredientState,
    /**
     * The IngredientUpdate model constructor.
     * @property {module:model/IngredientUpdate}
     */
    IngredientUpdate: IngredientUpdate,
    /**
     * The NutritionDeclarationCreate model constructor.
     * @property {module:model/NutritionDeclarationCreate}
     */
    NutritionDeclarationCreate: NutritionDeclarationCreate,
    /**
     * The NutritionDeclarationEmbed model constructor.
     * @property {module:model/NutritionDeclarationEmbed}
     */
    NutritionDeclarationEmbed: NutritionDeclarationEmbed,
    /**
     * The NutritionDeclarationEmbedBase model constructor.
     * @property {module:model/NutritionDeclarationEmbedBase}
     */
    NutritionDeclarationEmbedBase: NutritionDeclarationEmbedBase,
    /**
     * The NutritionDeclarationEmbedNutrients model constructor.
     * @property {module:model/NutritionDeclarationEmbedNutrients}
     */
    NutritionDeclarationEmbedNutrients: NutritionDeclarationEmbedNutrients,
    /**
     * The ProductCreate model constructor.
     * @property {module:model/ProductCreate}
     */
    ProductCreate: ProductCreate,
    /**
     * The ProductList model constructor.
     * @property {module:model/ProductList}
     */
    ProductList: ProductList,
    /**
     * The ProductOriginCreate model constructor.
     * @property {module:model/ProductOriginCreate}
     */
    ProductOriginCreate: ProductOriginCreate,
    /**
     * The ProductRead model constructor.
     * @property {module:model/ProductRead}
     */
    ProductRead: ProductRead,
    /**
     * The ProductState model constructor.
     * @property {module:model/ProductState}
     */
    ProductState: ProductState,
    /**
     * The ProductUpdate model constructor.
     * @property {module:model/ProductUpdate}
     */
    ProductUpdate: ProductUpdate,
    /**
     * The RecipeCreate model constructor.
     * @property {module:model/RecipeCreate}
     */
    RecipeCreate: RecipeCreate,
    /**
     * The RecipeIngredientCreate model constructor.
     * @property {module:model/RecipeIngredientCreate}
     */
    RecipeIngredientCreate: RecipeIngredientCreate,
    /**
     * The RecipeIngredientEmbed model constructor.
     * @property {module:model/RecipeIngredientEmbed}
     */
    RecipeIngredientEmbed: RecipeIngredientEmbed,
    /**
     * The RecipeList model constructor.
     * @property {module:model/RecipeList}
     */
    RecipeList: RecipeList,
    /**
     * The RecipeOriginCreate model constructor.
     * @property {module:model/RecipeOriginCreate}
     */
    RecipeOriginCreate: RecipeOriginCreate,
    /**
     * The RecipePreparationStepCreate model constructor.
     * @property {module:model/RecipePreparationStepCreate}
     */
    RecipePreparationStepCreate: RecipePreparationStepCreate,
    /**
     * The RecipePreparationStepEmbed model constructor.
     * @property {module:model/RecipePreparationStepEmbed}
     */
    RecipePreparationStepEmbed: RecipePreparationStepEmbed,
    /**
     * The RecipeRead model constructor.
     * @property {module:model/RecipeRead}
     */
    RecipeRead: RecipeRead,
    /**
     * The RecipeState model constructor.
     * @property {module:model/RecipeState}
     */
    RecipeState: RecipeState,
    /**
     * The RecipeUpdate model constructor.
     * @property {module:model/RecipeUpdate}
     */
    RecipeUpdate: RecipeUpdate,
    /**
     * The TaxonBagCreate model constructor.
     * @property {module:model/TaxonBagCreate}
     */
    TaxonBagCreate: TaxonBagCreate,
    /**
     * The TaxonBagList model constructor.
     * @property {module:model/TaxonBagList}
     */
    TaxonBagList: TaxonBagList,
    /**
     * The TaxonBagRead model constructor.
     * @property {module:model/TaxonBagRead}
     */
    TaxonBagRead: TaxonBagRead,
    /**
     * The TaxonBagUpdate model constructor.
     * @property {module:model/TaxonBagUpdate}
     */
    TaxonBagUpdate: TaxonBagUpdate,
    /**
     * The TaxonCreate model constructor.
     * @property {module:model/TaxonCreate}
     */
    TaxonCreate: TaxonCreate,
    /**
     * The TaxonList model constructor.
     * @property {module:model/TaxonList}
     */
    TaxonList: TaxonList,
    /**
     * The TaxonRead model constructor.
     * @property {module:model/TaxonRead}
     */
    TaxonRead: TaxonRead,
    /**
     * The TaxonUpdate model constructor.
     * @property {module:model/TaxonUpdate}
     */
    TaxonUpdate: TaxonUpdate,
    /**
     * The TaxonomyCreate model constructor.
     * @property {module:model/TaxonomyCreate}
     */
    TaxonomyCreate: TaxonomyCreate,
    /**
     * The TaxonomyList model constructor.
     * @property {module:model/TaxonomyList}
     */
    TaxonomyList: TaxonomyList,
    /**
     * The TaxonomyRead model constructor.
     * @property {module:model/TaxonomyRead}
     */
    TaxonomyRead: TaxonomyRead,
    /**
     * The TaxonomyUpdate model constructor.
     * @property {module:model/TaxonomyUpdate}
     */
    TaxonomyUpdate: TaxonomyUpdate,
    /**
     * The UserEmbed model constructor.
     * @property {module:model/UserEmbed}
     */
    UserEmbed: UserEmbed,
    /**
     * The VideoCreate model constructor.
     * @property {module:model/VideoCreate}
     */
    VideoCreate: VideoCreate,
    /**
     * The VideoCreateRead model constructor.
     * @property {module:model/VideoCreateRead}
     */
    VideoCreateRead: VideoCreateRead,
    /**
     * The VideoEmbed model constructor.
     * @property {module:model/VideoEmbed}
     */
    VideoEmbed: VideoEmbed,
    /**
     * The VideoList model constructor.
     * @property {module:model/VideoList}
     */
    VideoList: VideoList,
    /**
     * The VideoOriginCreate model constructor.
     * @property {module:model/VideoOriginCreate}
     */
    VideoOriginCreate: VideoOriginCreate,
    /**
     * The VideoRead model constructor.
     * @property {module:model/VideoRead}
     */
    VideoRead: VideoRead,
    /**
     * The VideoState model constructor.
     * @property {module:model/VideoState}
     */
    VideoState: VideoState,
    /**
     * The VideoUpdate model constructor.
     * @property {module:model/VideoUpdate}
     */
    VideoUpdate: VideoUpdate,
    /**
     * The VideoUpdateRead model constructor.
     * @property {module:model/VideoUpdateRead}
     */
    VideoUpdateRead: VideoUpdateRead,
    /**
     * The ArticleApi service constructor.
     * @property {module:api/ArticleApi}
     */
    ArticleApi: ArticleApi,
    /**
     * The BrandApi service constructor.
     * @property {module:api/BrandApi}
     */
    BrandApi: BrandApi,
    /**
     * The FileApi service constructor.
     * @property {module:api/FileApi}
     */
    FileApi: FileApi,
    /**
     * The ImageApi service constructor.
     * @property {module:api/ImageApi}
     */
    ImageApi: ImageApi,
    /**
     * The IngredientApi service constructor.
     * @property {module:api/IngredientApi}
     */
    IngredientApi: IngredientApi,
    /**
     * The ProductApi service constructor.
     * @property {module:api/ProductApi}
     */
    ProductApi: ProductApi,
    /**
     * The RecipeApi service constructor.
     * @property {module:api/RecipeApi}
     */
    RecipeApi: RecipeApi,
    /**
     * The TaxonomyApi service constructor.
     * @property {module:api/TaxonomyApi}
     */
    TaxonomyApi: TaxonomyApi,
    /**
     * The VideoApi service constructor.
     * @property {module:api/VideoApi}
     */
    VideoApi: VideoApi
  };

  return exports;
}));
